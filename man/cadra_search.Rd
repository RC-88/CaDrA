% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cadra_search.R
\name{cadra_search}
\alias{cadra_search}
\title{Permutation-based step-wise searching}
\usage{
cadra_search(
  ES,
  input_score,
  method = "ks",
  alternative = "less",
  metric = "pval",
  search_method = "both",
  search_start = NULL,
  max_size = 7,
  top_N = NULL,
  n_perm = 1000,
  plot = TRUE,
  obs_best_score = NULL,
  cache_path = NULL,
  smooth = TRUE,
  return_perm_pval = FALSE,
  seed = 123,
  ncores = 4
)
}
\arguments{
\item{ES}{an expression set object of binary features (required). It can be a BioBase expressionSet object or an expression matrix. The rownames or featureData of the expression set must contain the names of the corresponding features which are used in the search.}

\item{input_score}{a vector of ranked or continuous values (required).}

\item{method}{a character string specifying the method used to compute scores for features, must be one of "ks" or "wilcox" or "mi" (mutually exclusive method from REVEALER) or "custom" (a personal customization method). If input_score contains ranked scores, then 'ks' method is used by default. Otherwise, 'mi" is the default method}

\item{alternative}{a character string specifying the alternative hypothesis, must be one of "two.sided", "greater" or "less". Default is "less" for left-skewed significance testing.}

\item{metric}{a character string specifying which metric to use for candidate search. One of either 'pval' or 'stat' may be used, corresponding to the score p-value or statistic. Default is 'pval'}

\item{search_method}{a character string specifying which method to perform or filter out the best candidates. Default is 'forward'.}

\item{search_start}{an integer specifying a specific index within the expression set object of the feature to start the step-wise search with. Default is NULL. If NULL, then the search starts with the top ranked feature. If an integer is specified (N, where N < nrow(dataset)), then the search starts with the Nth best feature. If a string is specified, then the search starts with the feature with this name (must be a valid rowname in the dataset)}

\item{max_size}{an integer specifying the maximum size a meta-feature can extend do for a given search. Default is 7.}

\item{top_N}{an integer specifying the number of features to start the search over, starting from the top 'N' features in each case. Default is 1.}

\item{n_perm}{an integer specifying the number of permutations to perform. Default = 1000.}

\item{plot}{logical indicating whether or not to plot the emperical null distribution with the observed score and permutation p-value}

\item{obs_best_score}{a numeric value corresponding to the observed (best) stepwise search score to use for permutation based p-value computation. Default is NULL. If set to NULL, we compute the observed score given the ranking variable and ESet}

\item{cache_path}{full path to permutation-based (null) score distributions cache files. If a permutation for a given dataset (and dependent search variables such as 'N') exist, we recycle values instead of re-computing them to save time. Default is NULL. If NULL, cache path is set to the default ~/.Rcache for future cache loading.}

\item{smooth}{logical indicating whether or not to smoothen the p-value calculation to avoid p-value of 0. Default is TRUE}

\item{return_perm_pval}{logical indicating whether or not to return the permutation-based p-value computed by the function. Default is FALSE}

\item{seed}{seed set for permutation. Default = 123.}

\item{ncores}{number of cores to use, if using parallelization for permutation testing. Default = 4.}
}
\value{
If return_perm_pval is set to TRUE, will return the permutation p-value.
}
\description{
Performs permutation-based significance testing of step-wise search results.
}
