% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cadra_search.R
\name{cadra_search}
\alias{cadra_search}
\title{CaDrA Search}
\usage{
cadra_search(
  ES,
  input_score,
  method = "ks",
  custom_function = NULL,
  custom_parameters = NULL,
  alternative = "less",
  metric = "pval",
  weights = NULL,
  target_match = "positive",
  top_N = NULL,
  search_start = NULL,
  search_method = "both",
  max_size = 7,
  n_perm = 1000,
  seed = 123,
  smooth = TRUE,
  obs_best_score = NULL,
  plot = TRUE,
  ncores = 1,
  cache_path = NULL,
  return_perm_pval = TRUE
)
}
\arguments{
\item{ES}{an expression set of binary features (required). It must be a BioBase expressionSet object. The rownames of the expression set must contain unique features which are used to search for best features.}

\item{input_score}{a vector of continuous values for a target profile (required). The \code{input_score} object must have names or labels that match the colnames of the expression matrix.}

\item{method}{a character string specifies a method to compute the score for each feature (\code{"ks"} or \code{"wilcox"} or \code{"revealer"} (conditional mutual information from REVEALER) or \code{"custom"} (a customized method)). Default is \code{ks}.}

\item{custom_function}{if method is \code{"custom"}, specifies the customized function here. Default is \code{NULL}.}

\item{custom_parameters}{if method is \code{"custom"}, specifies a list of arguments to be passed to the custom_function(). Default is \code{NULL}.}

\item{alternative}{a character string specifies an alternative hypothesis testing (\code{"two.sided"} or \code{"greater"} or \code{"less"}). Default is \code{less} for left-skewed significance testing.}

\item{metric}{a character string specifies a metric to use for candidate search criteria. \code{"pval"} or \code{"stat"} may be used, corresponding to the score p-value or statistic. Default is \code{pval}.}

\item{weights}{a vector of weights use to perform a weighted-KS testing. Default is \code{NULL}.}

\item{target_match}{a direction of target matching (\code{"negative"} or \code{"positive"}) from REVEALER. Use \code{"positive"} to match the higher values of the target, \code{"negative"} to match the lower values. Default is \code{positive}.}

\item{top_N}{an integer specifies the number of features to start the search over, starting from the top 'N' features in each case. Default is \code{NULL}.}

\item{search_start}{an integer specifies an index within the expression set object of which feature to start the candidate search with. Default is \code{NULL}. If NULL, then the search starts with the top ranked feature. If an integer is specified (N, where N < nrow(ES)), the search starts with the Nth best feature. If a string is specified, the search starts with the feature with this name (must be a valid rowname in ES)}

\item{search_method}{a character string specifies a method to filter out the best candidates (\code{"forward"} or \code{"both"}). Default is \code{both} (backward and forward).}

\item{max_size}{an integer specifies a maximum size that a meta-feature can extend to do for a given search. Default is \code{7}.}

\item{n_perm}{an integer specifies the number of permutations to perform. Default is \code{1000}.}

\item{seed}{a seed set for permutation. Default is \code{123}.}

\item{smooth}{a logical value indicates whether or not to smooth the p-value calculation to avoid p-value of 0. Default is \code{TRUE}.}

\item{obs_best_score}{a numeric value corresponding to the observed (best) candidate search score to use for permutation based p-value computation. Default is \code{NULL}. If set to NULL, we compute the observed score given the \code{input_score} and \code{ES} variables.}

\item{plot}{a logical value indicates whether or not to plot the empirical null distribution with the observed score and permutation p-value. Default is \code{TRUE}.}

\item{ncores}{an integer specifies the number of cores to perform parallelization for permutation testing. Default is \code{1}.}

\item{cache_path}{a full path uses to cache permutation-based score distributions. If the permutation for a given ES and its dependent search variables such as 'N' exist, we recycle these values instead of re-computing them to save time. Default is \code{NULL}. If NULL, the cache path is set to \code{~/.Rcache} for future loading.}

\item{return_perm_pval}{a logical value indicates whether or not to return the permutation-based p-value computed by the function. Default is \code{TRUE}.}
}
\value{
If \code{return_perm_pval} is set to \code{TRUE}, it will return a permutation p-value.
}
\description{
Performs a permutation-based testing using results from \code{candidate_search()} function.
}
\examples{

# Load R library
library(Biobase)

# Load pre-computed expression set
data(sim.ES)

# set seed
set.seed(123)

# Provide a vector of continuous scores for a target profile with names to each score value 
input_score = rnorm(n = ncol(sim.ES))
names(input_score) <- colnames(sim.ES)

# Define additional parameters and start the function
# Not run as this would take some time to run
# candidate_search_result <- cadra_search(
#  ES = sim.ES, input_score = input_score, method = "ks", weights = NULL,
#  alternative = "less", metric = "pval", top_N = NULL, 
#  search_start = NULL, search_method = "both", max_size = 7, n_perm = 1000, 
#  seed = 123, plot = TRUE, smooth = TRUE, obs_best_score = NULL, 
#  ncores = 1, cache_path = NULL, return_perm_pval = TRUE
#)

}
\author{
Reina Chau
}
