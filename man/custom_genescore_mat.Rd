% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/custom_genescore_mat.R
\name{custom_genescore_mat}
\alias{custom_genescore_mat}
\title{Customized Scoring Method}
\usage{
custom_genescore_mat(mat, custom_function, custom_parameters, verbose = FALSE)
}
\arguments{
\item{mat}{a matrix of binary features (required). The provided \code{mat} along with \code{custom_parameters} will be passed as arguments to custom_function() which is used to compute row-wise scoring for each row of a given binary feature.}

\item{custom_function}{a customized function to perform row-wise scoring for each row of a given binary feature matrix (required). \code{NOTE:} This function must return a data frame with one or two columns: \code{score} or \code{p_value} or \code{both}.}

\item{custom_parameters}{a list of arguments to be passed to the custom_function() (required).}

\item{verbose}{a logical value indicates whether or not to print the diagnostic messages. Default is \code{FALSE}.}
}
\value{
a data frame with one or two columns: \code{score} and \code{p_value}
}
\description{
Compute row-wise scoring for each row of a given binary feature matrix
}
\examples{
# Load R library
library(Biobase)

# Examples of customized function using ks-test function
customized_genescore_mat <- function(mat, target, alternative){
  result <- 1:nrow(mat) \%>\% 
    purrr::map_dfr(
      function(r){ 
        feature = mat[r,];
        x = target[which(feature==1)]; y = target[which(feature==0)];
        res <- ks.test(x, y, alternative=alternative)
        return(data.frame(score=res$statistic, p_value=res$p.value))
   })
}

# Load pre-computed expression set
data(sim.ES)

# Extract the binary feature matrix
mat = exprs(sim.ES)

# Provide a vector of continuous scores for a target profile
target = rnorm(n = ncol(sim.ES))
 
# Define additional parameters and start the function
custom_genescore_result <- custom_genescore_mat(
  mat = mat,
  custom_function = customized_genescore_mat, 
  custom_parameters = list(target = target, alternative = "less")
)
 
}
