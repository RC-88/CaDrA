% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stepwise_search.R
\name{ks.stepwise}
\alias{ks.stepwise}
\title{Kolmogorov-Smirnov step-wise search}
\usage{
ks.stepwise(ranking = NULL, ES, metric, top_score_start = T,
  back_search = T, cust_start = NULL, decr = T, best_score_only = F,
  alt = "two.sided", wts = NULL)
}
\arguments{
\item{ranking}{vector containing rankings for sample ordering. Default is NULL. If NULL, we assume the ESet is already ranked}

\item{ES}{an expression set object of binary features. The first column of the featureData for the expression set must contain the names of the corresponding features, which are used in the search}

\item{metric}{a character string specifying which metric to use for stepwise search criteria. One of either 'pval' or 'stat' may be used, corresponding to the KS p-value or statistic}

\item{top_score_start}{a logical indicating whether or not to start the step-wise search with the feature having the best score based on the specified metric of interest. Default is TRUE}

\item{back_search}{a logical indicating whether or not to perform a forward-backward search (i.e. remove features along the search if it improves the best score). Default is TRUE. Uses function backward_check()}

\item{cust_start}{an integer specifying a specific index within the expression set object of the feature to start the step-wise search with. Default is NULL}

\item{decr}{a logical indicating whether samples are sorted in decreasing order of phenotype of interest. This affects how the ks statistic is interpreted}

\item{best_score_only}{a logical indicating whether or not the function should return only the score corresponding to the search results}

\item{alt}{a character string specifying the alternative hypothesis, must be one of "two.sided","greater" or "less". Default is "two.sided"}

\item{wts}{a vector of weights to use if performing weighted-KS testing. Default is NULL}
}
\value{
If best_score_only is set to TRUE, this function returns a list object with the score corresponding to the union of the search meta-feature. If this is set to FALSE, an expression set object containing the features whose union gave the best score is returned.
}
\description{
Performs step-wise heuristic search using an ordered set of binary features to see whether there are features whose union is more skewed (enriched at the extremes) than either features alone. This is the main functionality of the CaDrA package.
}

